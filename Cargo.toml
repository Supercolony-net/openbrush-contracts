[workspace]
members = [
    "contracts",
    "lang",
]

exclude = [
    "examples",
    "example_project_structure",
    "mock"
]

[package]
name = "openbrush"
version = "2.1.0"
authors = ["Supercolony <green.baneling@supercolony.net>"]
edition = "2018"

license = "MIT"
readme = "README.md"
repository = "https://github.com/Supercolony-net/openbrush-contracts"
documentation = "https://docs.openbrush.io"
homepage = "https://supercolony.net"
description = "OpenBrush library for smart contract development on ink!."
keywords = ["wasm", "supercolony", "smart-contracts", "blockchain", "ink"]
categories = ["no-std", "embedded"]
include = ["Cargo.toml", "src/**/*.rs"]

[dependencies]
ink_primitives = { version = "~3.3.0", default-features = false }
ink_metadata = { version = "~3.3.0", default-features = false, features = ["derive"], optional = true }
ink_env = { version = "~3.3.0", default-features = false }
ink_storage = { version = "~3.3.0", default-features = false }
ink_lang = { version = "~3.3.0", default-features = false }
ink_prelude = { version = "~3.3.0", default-features = false }
ink_engine = { version = "~3.3.0", default-features = false, optional = true }

scale = { package = "parity-scale-codec", version = "3", default-features = false, features = ["derive"] }
scale-info = { version = "2", default-features = false, features = ["derive"], optional = true }

openbrush_contracts = { version = "~2.1.0", path = "contracts", default-features = false }
openbrush_lang = { version = "~2.1.0", path = "lang", default-features = false }

[lib]
name = "openbrush"
path = "src/lib.rs"
crate-type = [
    "rlib",
]

[features]
default = ["std"]
std = [
    "ink_metadata/std",
    "ink_env/std",
    "ink_storage/std",
    "ink_primitives/std",
    "scale/std",
    "scale-info/std",

    "openbrush_contracts/std",
    "openbrush_lang/std",
]
access_control = ["openbrush_contracts/access_control"]
psp22 = ["openbrush_contracts/psp22"]
psp34 = ["openbrush_contracts/psp34"]
psp35 = ["openbrush_contracts/psp35"]
ownable = ["openbrush_contracts/ownable"]
payment_splitter = ["openbrush_contracts/payment_splitter"]
reentrancy_guard = ["openbrush_contracts/reentrancy_guard"]
pausable = ["openbrush_contracts/pausable"]
timelock_controller = ["openbrush_contracts/timelock_controller"]
proxy = ["openbrush_contracts/proxy"]
diamond = ["openbrush_contracts/diamond"]
mockable = ["openbrush_lang/mockable"]

[profile.release]
panic = "abort"
lto = true

[profile.dev]
panic = "abort"
lto = true
overflow-checks = false